pipeline {
    agent any

        stage('unit test Backend') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Build Backend') {
            steps {
                sh 'mvn clean install'
            }
        }

        /*stage('Sonarqube Analysis') {
            steps {
                sh "mvn sonar:sonar -Dsonar.host.url=http://localhost:9000/ -Dsonar.token=squ_728e06f59496b2cb913571a6947028d011652e38 -Dsonar.projectName='devops_backend'-Dsonar.sources=src/main -Dsonar.tests=src/test"
              }
        }*/


        /*stage('nexus deploy') {
            steps {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }*/
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t devops_back_project .'
            }
        }

        stage('Push Docker Image Back To DHub') {
            steps {
               withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhubpwd')]) {
                sh 'docker login -u riahinourelhouda -p $dockerhubpwd'
                sh 'docker tag devops_back_project riahinourelhouda/devops_back_project:latest'
                sh 'docker push riahinourelhouda/devops_back_project:latest'
              }
            }
        }


        stage('Docker compose') {
            steps {
                sh 'docker compose up -d'
            }
        }

    }

    post {
            success {
                mail to : 'eya.kasmi@esprit.tn',
                subject: 'ProjectDevops Pipeline - Success',
                body: 'ProjectDevops pipeline has successfully completed .'
            }

            failure {
                mail to : 'eya.kasmi@esprit.tn',
                subject: 'ProjectDevops Pipeline - Failure',
                body: 'ProjectDevops pipeline has failed completed .'
            }
        }
}
